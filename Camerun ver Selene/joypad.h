//*============================================================================
//joypad.h
//*============================================================================
//[history]
//	08/03/06　修正
//[author]
//	Taka
//============================================================================
//二重インクルード防止
#pragma once

//=============================================================================
//include
//=============================================================================
#include "Selene.h"
#include "lua.hpp"

//=============================================================================
//using
//=============================================================================
using namespace Selene;



//=============================================================================
//class
//=============================================================================
//[desc]
//	ジョイパッド用クラス
//=============================================================================
class CJoyPad 
{
	private:
	
		Math::Point2DI deb;
	
	private:
	
		static Peripheral::IInputController *m_pController;//コントローラー用デバイス
		Peripheral::IJoystick		 *m_pJoystick;//ジョイスティック用デバイス
		
	public:
	
		CJoyPad();//コンストラクタ
		virtual ~CJoyPad();//デストラクタ
		
		
	public:
	
		void CreateDevice( ICore *pCore );//デバイスの作成
		void Initialize();	//初期化
		void Update();//更新
		
		void AddRef();//参照カウンタ増加
		
		
		
	/*Get系*/
	public:
	
		/*コントローラー用デバイスの取得*/
		Peripheral::IInputController *GetController() const
		{
			return m_pController;
		}
		
		//ジョイスティック用デバイスの取得
		Peripheral::IJoystick *GetJoyStick() const
		{
			return m_pJoystick;
		}

	
	
};